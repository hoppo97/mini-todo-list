// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoList component TodoList snapshots renders without data 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <ul
        class="todosList"
      >
        <li
          class="todoItem"
        >
          <div
            class="CheckBox"
          >
            <svg
              class="bgc checked"
              fill="currentColor"
              height="24"
              stroke="currentColor"
              stroke-width="0"
              viewBox="0 0 16 16"
              width="24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"
              />
            </svg>
            <label
              class="labelChecked"
            >
              Приготовить
            </label>
          </div>
        </li>
        <li
          class="todoItem"
        >
          <div
            class="CheckBox"
          >
            <svg
              class="bgc null"
              fill="currentColor"
              height="24"
              stroke="currentColor"
              stroke-width="0"
              viewBox="0 0 16 16"
              width="24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"
              />
            </svg>
            <label
              class="labelUnChecked"
            >
              Поесть
            </label>
          </div>
        </li>
        <li
          class="todoItem"
        >
          <div
            class="CheckBox"
          >
            <svg
              class="bgc checked"
              fill="currentColor"
              height="24"
              stroke="currentColor"
              stroke-width="0"
              viewBox="0 0 16 16"
              width="24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"
              />
            </svg>
            <label
              class="labelChecked"
            >
              Поспать
            </label>
          </div>
        </li>
      </ul>
      <div
        class="todosList"
      >
        <button
          class="addTask all"
        >
          Все задачи
        </button>
        <button
          class="addTask green"
        >
          Выполненые задачи
        </button>
        <button
          class="addTask blue"
        >
          Активные задачи
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <ul
      class="todosList"
    >
      <li
        class="todoItem"
      >
        <div
          class="CheckBox"
        >
          <svg
            class="bgc checked"
            fill="currentColor"
            height="24"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 16 16"
            width="24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"
            />
          </svg>
          <label
            class="labelChecked"
          >
            Приготовить
          </label>
        </div>
      </li>
      <li
        class="todoItem"
      >
        <div
          class="CheckBox"
        >
          <svg
            class="bgc null"
            fill="currentColor"
            height="24"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 16 16"
            width="24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"
            />
          </svg>
          <label
            class="labelUnChecked"
          >
            Поесть
          </label>
        </div>
      </li>
      <li
        class="todoItem"
      >
        <div
          class="CheckBox"
        >
          <svg
            class="bgc checked"
            fill="currentColor"
            height="24"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 16 16"
            width="24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"
            />
          </svg>
          <label
            class="labelChecked"
          >
            Поспать
          </label>
        </div>
      </li>
    </ul>
    <div
      class="todosList"
    >
      <button
        class="addTask all"
      >
        Все задачи
      </button>
      <button
        class="addTask green"
      >
        Выполненые задачи
      </button>
      <button
        class="addTask blue"
      >
        Активные задачи
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
